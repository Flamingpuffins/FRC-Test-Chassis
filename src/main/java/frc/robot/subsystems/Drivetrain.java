// RobotBuilder Version: 3.1
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot.subsystems;


import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.SubsystemBase;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.PWMTalonSRX;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Drivetrain extends SubsystemBase {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
public static final String PlaceDistance = "";

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private PWMTalonSRX left1;
private PWMTalonSRX left2;
private SpeedControllerGroup speedControllerGroup1;
private PWMTalonSRX right1;
private PWMTalonSRX right2;
private SpeedControllerGroup speedControllerGroup2;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    /**
    *
    */
    public Drivetrain() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
left1 = new PWMTalonSRX(0);
 addChild("Left1",left1);
 left1.setInverted(false);

left2 = new PWMTalonSRX(1);
 addChild("Left2",left2);
 left2.setInverted(false);

SpeedControllerGroup speedControllerGroup1 = new SpeedControllerGroup(left1, left2  );
 addChild("Speed Controller Group 1",speedControllerGroup1);
 

right1 = new PWMTalonSRX(2);
 addChild("Right1",right1);
 right1.setInverted(false);

right2 = new PWMTalonSRX(3);
 addChild("Right2",right2);
 right2.setInverted(false);

SpeedControllerGroup speedControllerGroup2 = new SpeedControllerGroup(right1, right2  );
 addChild("Speed Controller Group 2",speedControllerGroup2);
 


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void periodic() {
        // This method will be called once per scheduler run

    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void drive(double left, double right) {
        drive.tankDrive(left, right);
    }
}

